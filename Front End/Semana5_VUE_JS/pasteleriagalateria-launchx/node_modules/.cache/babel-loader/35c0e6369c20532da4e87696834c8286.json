{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-261fe101\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  \"class\": \"inv\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h3\", null, \"Inventario\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_3 = {\n  \"class\": \"ingredientes\"\n};\nvar _hoisted_4 = {\n  \"class\": \"card\"\n};\nvar _hoisted_5 = [\"value\", \"max\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"Este componente muestra las cantidades que hay de cada producto\"), _createCommentVNode(\"Div contenedor\"), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\"Div con toda la info\"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\"Este div se usa para todos los ingredientes\"), _createCommentVNode(\"Con el ciclo v-for, repite este div para cada ingrediente que este en store.state\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.Ingred, function (ingrediente, index) {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\"Index es el nombre de la key\"), _createElementVNode(\"span\", null, _toDisplayString(index), 1\n    /* TEXT */\n    ), _createCommentVNode(\"unit es la unidad de medida del producto\"), _createCommentVNode(\"Existencia es el la cantidad de producto que hay\"), _createCommentVNode(\"Total es el maximo de deberia haber en bodega\"), _createElementVNode(\"div\", null, [_createElementVNode(\"span\", null, \"0\" + _toDisplayString(ingrediente.unit), 1\n    /* TEXT */\n    ), _createElementVNode(\"progress\", {\n      value: ingrediente.Existencia,\n      max: ingrediente.Total\n    }, _toDisplayString(ingrediente.Existencia) + \"%\", 9\n    /* TEXT, PROPS */\n    , _hoisted_5), _createElementVNode(\"span\", null, _toDisplayString(ingrediente.Total) + _toDisplayString(ingrediente.unit), 1\n    /* TEXT */\n    )])])]);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;;AAGS,WAAM;;;;sBACPA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;;;AAEK,WAAM;;;AAKE,WAAM;;;;6DAV3BC,wFACIA,uCACAD,oBAkBM,KAlBN,cAkBM,CAjBFE,UAiBE,EAhBFD,2CAgBE,EAfFD,oBAcM,KAdN,cAcM,CAbFC,kEAaE,EAZFA,wGAYE,qBAXFE,oBAUMC,SAVN,EAUM,IAVN,EAUMC,YAV6BC,eAU7B,EAVmC,UAA5BC,WAA4B,EAAhBC,KAAgB,EAAX;yBAA9BL,oBAUM,KAVN,EAUM,IAVN,EAUM,CARFH,oBAOM,KAPN,cAOM,CANFC,mDAME,EALFD,oBAAsB,MAAtB,EAAsB,IAAtB,EAAsBS,iBAAdD,KAAc,CAAtB,EAAa;AAAA;AAAb,KAKE,EAJFP,+DAIE,EAHFA,uEAGE,EAFFA,oEAEE,EADFD,oBAA8M,KAA9M,EAA8M,IAA9M,EAA8M,CAAzMA,oBAAmC,MAAnC,EAAmC,IAAnC,EAAM,MAACS,iBAAEF,WAAW,CAACG,IAAd,CAAP,EAAyB;AAAA;AAAzB,KAAyM,EAAtKV,oBAAyG,UAAzG,EAAyG;AAA9FW,WAAK,EAAEJ,WAAW,CAACK,UAA2E;AAA9DC,SAAG,EAAEN,WAAW,CAACO;AAA6C,KAAzG,mBAAqEP,WAAW,CAACK,cAAY,GAA7F,EAA8F;AAAA;AAA9F,MAA8FG,UAA9F,CAAsK,EAA7Df,oBAAuD,MAAvD,EAAuD,IAAvD,EAAuDS,iBAA9CF,WAAW,CAACO,KAAkC,IAA7BL,iBAAIF,WAAW,CAACG,IAAhB,CAA1B,EAA8C;AAAA;AAA9C,KAA6D,CAA9M,CACE,CAPN,CAQE,CAVN;GAUM,CAVN;;AAAA,GAWE,EAdN,CAeE,CAlBN","names":["_createElementVNode","_createCommentVNode","_hoisted_2","_createElementBlock","_Fragment","_renderList","$options","ingrediente","index","_toDisplayString","unit","value","Existencia","max","Total","_hoisted_5"],"sourceRoot":"","sources":["/Users/ricardovb/Documents/CursoMicrosoftFullStack/MicrosoftFullStack_LaunchX/Front End/Semana5_VUE_JS/pasteleriagalateria-launchx/src/components/inventario.vue"],"sourcesContent":["<template>\r\n<!--Este componente muestra las cantidades que hay de cada producto-->\r\n    <!--Div contenedor-->\r\n    <div class=\"inv\">\r\n        <h3>Inventario</h3>\r\n        <!--Div con toda la info-->\r\n        <div class=\"ingredientes\">\r\n            <!--Este div se usa para todos los ingredientes-->\r\n            <!--Con el ciclo v-for, repite este div para cada ingrediente que este en store.state-->\r\n            <div v-for=\"(ingrediente,index) in Ingred\">\r\n\r\n                <div class=\"card\">\r\n                    <!--Index es el nombre de la key-->\r\n                    <span>{{index}}</span>\r\n                    <!--unit es la unidad de medida del producto-->\r\n                    <!--Existencia es el la cantidad de producto que hay-->\r\n                    <!--Total es el maximo de deberia haber en bodega-->\r\n                    <div><span>0{{ingrediente.unit}} </span><progress :value=\"ingrediente.Existencia\" :max=\"ingrediente.Total\">{{ingrediente.Existencia}}%</progress><span> {{ingrediente.Total}}{{ingrediente.unit}}</span></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    name:\"inventario\",\r\n    computed:{\r\n        //llama a los datos en store.state\r\n        Ingred(){return this.$store.state.Ingredientes},\r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.inv{\r\n    width: 100%;\r\n    background: rgba(00, 00, 00, .7);\r\n\r\n    color: whitesmoke;    \r\n}\r\nh3{\r\n    margin: 0px 0px 10px 0px;\r\n}\r\n.ingredientes{\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n}\r\n.card{\r\n    height: 60px;\r\n    width: 220px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    margin: 10px;\r\n    border: 3px solid white;\r\n}\r\n.card div span{\r\n    font-size: 12px;\r\n    margin: 0px 2px 0px 2px;\r\n}\r\n\r\n@media screen and (max-width:491px){\r\n    .ingredientes{\r\n        justify-content: center;\r\n    }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}